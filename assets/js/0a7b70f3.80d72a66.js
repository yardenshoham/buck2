"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8255],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>u,MDXProvider:()=>d,mdx:()=>x,useMDXComponents:()=>m,withMDXComponents:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},i.apply(this,arguments)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),c=function(e){return function(t){var n=m(t.components);return a.createElement(e,i({},t,{components:n}))}},m=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=m(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=m(n),d=r,p=c["".concat(o,".").concat(d)]||c[d]||f[d]||i;return n?a.createElement(p,l(l({ref:t},u),{},{components:n})):a.createElement(p,l({ref:t},u))}));function x(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},3355:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var a=n(87462),r=(n(67294),n(3905));const i={id:"remote_execution",title:"Remote Execution"},o=void 0,l={unversionedId:"users/remote_execution",id:"users/remote_execution",title:"Remote Execution",description:"Buck2 can use services that expose Bazel's remote execution API in order to run actions remotely.",source:"@site/../docs/users/remote_execution.md",sourceDirName:"users",slug:"/users/remote_execution",permalink:"/docs/users/remote_execution",draft:!1,tags:[],version:"current",frontMatter:{id:"remote_execution",title:"Remote Execution"},sidebar:"manualSidebar",previous:{title:"Logging",permalink:"/docs/users/build_observability/logging"},next:{title:"Deferred Materialization",permalink:"/docs/users/advanced/deferred_materialization"}},s={},u=[{value:"RE configuration in <code>.buckconfig</code>",id:"re-configuration-in-buckconfig",level:2},{value:"RE platform configuration",id:"re-platform-configuration",level:2}],c={toc:u};function m(e){let{components:t,...n}=e;return(0,r.mdx)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"Buck2 can use services that expose ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/bazelbuild/remote-apis"},"Bazel's remote execution API")," in order to run actions remotely."),(0,r.mdx)("p",null,"Buck2 projects have been successfully tested for remote execution against ",(0,r.mdx)("a",{parentName:"p",href:"https://www.engflow.com/"},"EngFlow"),", ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/buildbarn/bb-remote-execution"},"BuildBarn")," and ",(0,r.mdx)("a",{parentName:"p",href:"https://www.buildbuddy.io"},"BuildBuddy"),". Sample project configurations for those providers are available under ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/facebook/buck2/tree/main/examples/remote_execution"},"examples/remote_execution"),"."),(0,r.mdx)("h2",{id:"re-configuration-in-buckconfig"},"RE configuration in ",(0,r.mdx)("inlineCode",{parentName:"h2"},".buckconfig")),(0,r.mdx)("p",null,"Configuration for remote execution can be found under ",(0,r.mdx)("inlineCode",{parentName:"p"},"[buck2_re_client]")," in ",(0,r.mdx)("inlineCode",{parentName:"p"},".buckconfig"),"."),(0,r.mdx)("p",null,"Keys supported include:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"engine_address")," - address to your RE's engine."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"action_cache_address")," - address to your action cache endpoint."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"cas_address")," - address to your content-addressable storage (CAS) endpoint."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"tls_ca_certs")," - path to a CA certificates bundle. This must be PEM-encoded. If none is set, a default bundle will be used. This path contains environment variables using shell interpolation syntax (i.e. $VAR). They will be substituted before reading the file."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"tls_client_cert")," - path to a client certificate (and intermediate chain), as well as its associated private key. This must be PEM-encoded. This path can contain environment variables using shell interpolation syntax (i.e. $VAR). They will be substituted before reading the file."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"http_headers")," - HTTP headers to inject in all requests to RE. This is a comma-separated list of ",(0,r.mdx)("inlineCode",{parentName:"li"},"Header: Value")," pairs. Minimal validation of those headers is done here. This can contain environment variables using shell interpolation syntax ($VAR). They will be substituted before reading the file."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"instance_name")," - an instance name to pass on execution, action cache, and CAS requests.")),(0,r.mdx)("p",null,"Buck2 uses ",(0,r.mdx)("inlineCode",{parentName:"p"},"SHA256")," for all its hashing by default. If your RE engine requires something else, this can be configured in ",(0,r.mdx)("inlineCode",{parentName:"p"},".buckconfig")," as follows:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-ini"},"[buck2]\n# Accepts BLAKE3, SHA1, or SHA256\ndigest_algorithms = BLAKE3\n")),(0,r.mdx)("h2",{id:"re-platform-configuration"},"RE platform configuration"),(0,r.mdx)("p",null,"Next, your build will need an ",(0,r.mdx)("a",{parentName:"p",href:"https://buck2.build/docs/concepts/glossary/#execution-platform"},"execution platform")," that specifies how and where actions should be executed. For a sample platform definition that sets up an execution platform to utilize RE, take a look at the ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/facebook/buck2/blob/main/examples/remote_execution/engflow/platforms/defs.bzl"},"EngFlow example"),", ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/facebook/buck2/blob/main/examples/remote_execution/buildbarn/platforms/defs.bzl"},"BuildBarn example"),", or the ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/facebook/buck2/blob/main/examples/remote_execution/buildbuddy/platforms/defs.bzl"},"BuildBuddy example"),"."),(0,r.mdx)("p",null,"To enable remote execution, configure the following fields in ",(0,r.mdx)("a",{parentName:"p",href:"https://buck2.build/docs/api/build/globals/#commandexecutorconfig"},"CommandExecutorConfig")," as follows:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"remote_enabled")," - set to ",(0,r.mdx)("inlineCode",{parentName:"li"},"True"),"."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"local_enabled")," - set to ",(0,r.mdx)("inlineCode",{parentName:"li"},"True")," if you also want to run actions locally."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"use_limited_hybrid")," - set to ",(0,r.mdx)("inlineCode",{parentName:"li"},"False")," unless you want to exclusively run remotely when possible."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"remote_execution_properties")," - other additional properties.",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"If the RE engine requires a container image, this can be done by setting ",(0,r.mdx)("inlineCode",{parentName:"li"},"container-image")," to an image URL, as is done in the example above.")))))}m.isMDXComponent=!0}}]);